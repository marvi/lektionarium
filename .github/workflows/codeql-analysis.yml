# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
#
name: "CodeQL"

on:
  push:
    branches: [ master ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ master ]
  schedule:
    - cron: '28 23 * * 0'

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        language: [ 'java', 'javascript', 'python' ]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python' ]
        # Learn more:
        # https://docs.github.com/en/free-pro-team@latest/github/finding-security-vulnerabilities-and-errors-in-your-code/configuring-code-scanning#changing-the-languages-that-are-analyzed

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: ${{ matrix.language }}
        # If you wish to specify custom queries, you can do so here or in a config file.
        # By default, queries listed here will override any specified in a config file.
        # Prefix the list here with "+" to use these queries and those in the config file.
        # queries: ./path/to/local/query, your-org/your-repo/queries@main

    # If you are using a multi-language repository, you can modify the build
    # command to build each language separately.
    # For example:
    # - run: |
    #     mvn -B package --file pom.xml -DskipTests
    #   if: matrix.language == 'java'
    # - run: |
    #     npm install
    #     npm run build
    #   if: matrix.language == 'javascript'
    #   working-directory: frontend # Adjust if your JS code is elsewhere

    - name: Setup Java and Maven
      if: matrix.language == 'java'
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin' # Or another distribution like 'adopt'
        java-version: '21' # Corresponds to Java 1.8
        cache: 'maven'

    - name: Build with Maven
      if: matrix.language == 'java'
      # Using 'install' to ensure all modules are built and local dependencies are available.
      # -DskipTests to speed up the build for analysis purposes.
      # Using -B for non-interactive mode.
      # CodeQL needs the compiled code, so 'compile' goal for all modules is essential.
      # 'install' is safer as it handles multi-module dependencies correctly for analysis.
      run: mvn -B install -DskipTests --file pom.xml

    # For JavaScript, if 'autobuild' was handling it, you might need explicit build steps
    # if your frontend build isn't triggered by the Maven build of a Java module.
    # However, our frontend module is built via frontend-maven-plugin,
    # so the 'mvn install' command above should trigger the JS build.

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1
