# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Release a version

on: 
  workflow_dispatch:
    inputs:
      scope:
        description: 'Scope: patch, minor, major'     
        required: true
        default: 'patch'
      stage:
        description: 'Stage: beta, final'     
        required: true
        default: 'beta'
jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Needed for reckon to push tags
      packages: write # Needed to publish to GitHub Packages
    steps:
      - uses: actions/checkout@v3 # Updated to v3
        with:
          fetch-depth: '0' # Required by reckon for versioning
      - name: Set up JDK 1.8 and Maven
        uses: actions/setup-java@v3 # Updated to v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'
          server-id: github # ID of the server section in settings.xml
          # GITHUB_TOKEN is automatically used by setup-java for GitHub Packages
          # if server-id is 'github'. Ensure POM's repository ID matches.

      - name: Publish package with Maven and Push Reckon Tag
        # The reckon-maven-plugin will determine the version based on scope and stage
        # and apply it to the POMs before deploying.
        # The deploy command will build, package, and deploy artifacts.
        # We pass GITHUB_ACTOR and GITHUB_TOKEN for publishing to GitHub Packages.
        # The reckon:pushTag goal will create and push the Git tag.
        run: |
          mvn -B deploy -DskipTests -Dreckon.scope=${{ github.event.inputs.scope }} -Dreckon.stage=${{ github.event.inputs.stage }} --file pom.xml
          mvn -B reckon:pushTag -Dreckon.scope=${{ github.event.inputs.scope }} -Dreckon.stage=${{ github.event.inputs.stage }} --file pom.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # GITHUB_ACTOR is an environment variable provided by Actions,
          # setup-java might use it if needed, or Maven might pick it up.
          # For GitHub Packages, username is often GITHUB_ACTOR.
          # The settings.xml generated by setup-java should handle credentials.
